name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 🧪 Test and Build Job
  test-and-build:
    name: 🔨 Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔍 Run Type Check
      run: npm run type-check || echo "No type-check script found, skipping..."
      continue-on-error: true
      
    - name: 🧪 Run Tests
      run: npm test -- --coverage --watchAll=false || echo "No tests found, skipping..."
      continue-on-error: true
      
    - name: 🏗️ Build Project
      run: npm run build
      
    - name: 📊 Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-node-${{ matrix.node-version }}
        path: dist/
        retention-days: 7

  # 📋 Code Quality Job
  code-quality:
    name: 📋 Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🎨 Run Prettier Check
      run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,css,md}" || echo "Prettier check completed with warnings"
      continue-on-error: true
      
    - name: 🔧 Run ESLint
      run: npx eslint src/ --ext .ts,.tsx,.js,.jsx || echo "ESLint completed with warnings"
      continue-on-error: true

  # 🚀 Deploy to GitHub Pages
  deploy:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [test-and-build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🏗️ Build for Production
      run: npm run build
      env:
        NODE_ENV: production
        
    - name: ⚙️ Setup Pages
      uses: actions/configure-pages@v4
      
    - name: 📤 Upload to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist/
        
    - name: 🌐 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # 📱 Lighthouse Performance Check
  lighthouse:
    name: 📱 Lighthouse Performance
    runs-on: ubuntu-latest
    needs: [deploy]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔍 Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
        uploadArtifacts: true
        temporaryPublicStorage: true 